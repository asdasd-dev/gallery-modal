{"version":3,"sources":["logo.svg","components/GalleryImage/GalleryImage.js","components/Gallery/Gallery.js","components/Footer/Footer.js","hooks/useModal.js","components/Portal/Portal.js","components/Modal/Modal.js","components/BigImage/BigImage.js","components/CommentForm/CommentForm.js","components/Comments/Comments.js","App.js","reportWebVitals.js","index.js"],"names":["GalleryImage","props","className","src","onClick","openModal","Gallery","useState","images","isLoaded","fetchStatus","setFetchStatus","undefined","error","setError","useEffect","fetch","imagesUrl","then","response","json","result","message","map","image","url","bind","id","Footer","useModal","open","onOpenModal","close","onCloseModal","closeModal","Portal","modalRoot","document","getElementById","createElement","setAttribute","body","appendChild","modalElement","removeChild","ReactDOM","createPortal","children","Modal","mobile","render","BigImage","CommentForm","name","setName","commentText","setCommentText","type","placeholder","onChange","e","target","value","onSubmit","preventDefault","Comments","comments","length","comment","datetime","Date","date","getDate","getMonth","getFullYear","text","empty","App","documentElement","clientWidth","isMobile","setIsMobile","imageInfo","setImageInfo","handleImageClick","a","scrollTop","handlePostComment","formData","FormData","append","method","alert","status","style","padding","display","flexDirection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.11dfc03a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport './GalleryImage.scss';\n\n\nexport default function GalleryImage (props) {  \n  return (\n    <div className=\"GalleryImage\">\n      <img src={props.src} onClick={props.openModal}></img>\n    </div>\n  );\n};","import React, {useState, useEffect} from 'react';\nimport './Gallery.scss'\nimport GalleryImage from '../GalleryImage/GalleryImage'\n\nexport default function Gallery(props) {\n\n  let [fetchStatus, setFetchStatus] = useState({images: [], isLoaded: false});\n  let [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    if (!fetchStatus.isLoaded) {\n      fetch(props.imagesUrl)\n        .then(response => response.json())\n        .then(result => {\n          setFetchStatus({images: result, isLoaded: true});\n        }\n          , error => setError(error));\n    }\n  });\n  \n\n  return (\n    <div className=\"Gallery\">\n      {\n        !fetchStatus.isLoaded ? <p>Loading...</p> :\n        error ? <p>{error.message}</p> :\n        fetchStatus.images.map(image => <GalleryImage key={image.id} src={image.url} openModal={props.openModal.bind(null, image.id)}/>)\n      }\n    </div>\n  );\n};","import React from 'react';\nimport './Footer.scss'\n\nexport default function Footer(props) {\n  return <div className=\"Footer\">@ 2018-2020</div>;\n};\n","import {useState} from 'react';\r\n\r\nconst useModal = () => {\r\n    const [open, onOpenModal] = useState(false);\r\n    const [close, onCloseModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        onOpenModal(true);\r\n    }\r\n\r\n    const closeModal = () => {\r\n        onCloseModal(true);\r\n        onOpenModal(false);\r\n    }\r\n\r\n    return { open, close, openModal, closeModal };\r\n}\r\n\r\nexport default useModal;","import {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nexport default function Portal(props) {\n\n  let modalRoot = document.getElementById('modal-root');\n\n  if (!modalRoot) {\n    modalRoot = document.createElement('div');\n    modalRoot.setAttribute('id', 'modal-root');\n    document.body.appendChild(modalRoot);\n  }\n\n  const modalElement = document.createElement('div');\n\n  useEffect(() => {\n    modalRoot.appendChild(modalElement);\n    return (() => modalRoot.removeChild(modalElement))\n  })\n\n  return (\n    ReactDOM.createPortal(\n    props.children,\n    modalElement\n  ));\n};\n","import React from 'react';\r\nimport Portal from '../Portal/Portal';\r\nimport './Modal.scss'\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Portal>\r\n            <div className='Modal'>\r\n                <div className='flex-container'>\r\n                    <div className={'modal-content' + (props.mobile ? ' mobile' : '')}>\r\n                        {props.render ? props.render(props.children) : props.children}\r\n                        <img className='close-modal' src='Close.png' onClick={props.close} />\r\n                    </div>\r\n                </div>\r\n                <div className='blackout' />\r\n            </div>\r\n        </Portal>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './BigImage.scss'\r\n\r\nexport default function BigImage(props) {\r\n  return (\r\n    <div className=\"BigImage\">\r\n      <img src={props.src}></img>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport './CommentForm.scss'\r\n\r\nexport default function CommentForm(props) {\r\n  let [name, setName] = useState('');\r\n  let [commentText, setCommentText] = useState('');\r\n\r\n  return (\r\n    <div className=\"CommentForm\">\r\n      <form className=\"form-element\">\r\n        <input type='text' placeholder=\"Your name\" onChange={e => setName(e.target.value)}/>\r\n        <input type='text' placeholder=\"Your comment\" onChange={e => setCommentText(e.target.value)}/>\r\n        <input type='submit' value=\"Post comment\" onClick={(e) => {\r\n          props.onSubmit(name, commentText);\r\n          e.preventDefault();\r\n        }}/>\r\n      </form>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport './Comments.scss'\r\n\r\nexport default function Comments(props) {\r\n  return (\r\n    <div className='Comments'>\r\n      {props.comments.length ? \r\n        props.comments.map(comment => {\r\n        let datetime = new Date(comment.date);\r\n        return (\r\n          <div className=\"comment\" key={comment.id}>\r\n            <p className=\"comment-date\">{datetime.getDate()}.{datetime.getMonth() + 1}.{datetime.getFullYear()}</p>\r\n            <p className=\"comment-text\">{comment.text}</p>\r\n          </div>\r\n        );\r\n        })\r\n        :\r\n        props.empty()\r\n      }\r\n    </div>\r\n  );\r\n};","import logo from './logo.svg';\nimport './App.scss';\nimport Gallery from './components/Gallery/Gallery';\nimport Footer from './components/Footer/Footer';\nimport useModal from './hooks/useModal';\nimport Modal from './components/Modal/Modal';\nimport { useState, useEffect } from 'react';\nimport BigImage from './components/BigImage/BigImage';\nimport CommentForm from './components/CommentForm/CommentForm';\nimport Comments from './components/Comments/Comments';\n\nfunction App() {\n\n  const { open, openModal, closeModal } = useModal();\n  let [isMobile, setIsMobile] = useState(document.documentElement.clientWidth < 480);\n\n  useEffect(() => {\n    setIsMobile(document.documentElement.clientWidth < 768);\n  });\n\n  let [imageInfo, setImageInfo] = useState(undefined);\n\n  let handleImageClick = async (id, e) => {\n    fetch(\"https://boiling-refuge-66454.herokuapp.com/images/\" + id)\n      .then(response => response.json())\n      .then(result => {\n        setImageInfo(result);\n        openModal();\n        document.documentElement.scrollTop = 0;\n      })\n  }\n\n  let handleModalClose = () => {\n    closeModal();\n    setImageInfo(undefined);\n  }\n\n  let handlePostComment = async (name, commentText) => {\n    let formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"text\", commentText);\n    fetch('https://boiling-refuge-66454.herokuapp.com/images/' + imageInfo.id + '/comments', {\n      method: 'POST',\n      body: formData,\n    })\n      .then(response => alert('status: ' + response.status))\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"content\">\n          <h1>Test App</h1>\n          <Gallery imagesUrl=\"https://boiling-refuge-66454.herokuapp.com/images\" openModal={handleImageClick}/>\n        </div>\n        <Footer />\n        {open ? (\n          <Modal close={handleModalClose} mobile={isMobile}>\n            {!isMobile ? \n              <div style={{display: \"flex\", padding: \"40px\"}}>\n                <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                  <BigImage src={imageInfo.url}/>\n                  <CommentForm onSubmit={handlePostComment}/>\n                </div>\n                <Comments comments={imageInfo.comments} empty={() => <div>No comments</div>} />\n              </div>\n              : \n              <div>\n                <BigImage src={imageInfo.url} />\n                <Comments comments={imageInfo.comments} empty={() => <div>No comments</div>} />\n                <div style={{padding: \"0 20px\"}}>\n                  <CommentForm onSubmit={handlePostComment}/>\n                </div>\n              </div>\n            }\n          </Modal>\n        ) : null}\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}